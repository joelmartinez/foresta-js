{"name":"Foresta-js","tagline":"Selector engine for JavaScript syntax trees","body":"![Foresta](https://raw.github.com/joelmartinez/foresta-js/master/logo.png)\r\n\r\nSelector engine for JavaScript syntax trees. Lets you write queries against abstract syntax trees generated \r\nby Esprima (http://esprima.org/) to pull out specific expressions from the program.\r\n\r\nThere are three basic kinds of query components you can use:\r\n\r\n* `#IdentifierName` - Identifier selectors let you match against an Identifier expression's name property. So for example, if you want to select a specific variable declaration you can use this.\r\n* `ExpressionType` - You can match a specific expression type by simply using the type name in the selector. The full list of expression types can be found in the Mozilla Spidermonkey Parser API documentation: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\r\n* `*` - wildcard, will match any expression type.\r\n\r\nThe query language also supports _contextual property modifiers_. These modifiers can be added to the last query component to let you refine what object gets put into the results list.\r\nProperty modifiers are added with a semicolon: `<component>:property:modifier`\r\n\r\n*Examples:*\r\n\r\nYou can pull all literal values in your program by using the query `\"Literal\"`.\r\n\r\nTo get the initialization expression of a variable named `\"theValue\"` (ie. `var theValue = 4+2;`)\r\n```\r\nvar query = new foresta(\"#theValue\");\r\nquery.visit(theSyntaxTree);\r\nvar expression = query.results[0].init; // the binary expression for '4+2'\r\n```\r\n\r\nAll global variables declared in this javascript program can be selected with the selector `\"Program VariableDeclaration VariableDeclarator\"`\r\n\r\nContextual Property Modifiers can be useful to select a specific expression that is referred to by an identifer. For example, given the following expression:\r\n\r\n```\r\nvar a = {\r\n  update: function() {\r\n  \tvar s;\r\n\t}\r\n};\r\n```\r\n\r\nYou can get the `FunctionExpression` by issuing this query: `ObjectExpression Property #update:parent:value`.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}